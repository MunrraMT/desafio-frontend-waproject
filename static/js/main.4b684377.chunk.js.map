{"version":3,"sources":["providers/data-context.js","components/home-title.js","components/how-many-questions.js","components/review-report.js","pages/home-page.js","routes/start-quest-route.js","routes/questions-route.js","routes/report-route.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","numberQuestions","started","questionsData","DataProvider","props","useState","setNumberQuestions","setStarted","setQuestionsData","Provider","value","children","useStyles","makeStyles","paperTitleApp","backgroundColor","boxTitleApp","marginTop","width","HomeTitle","classes","Box","className","Paper","variant","Typography","align","component","cardQuestNumber","btnStartQuestion","boxQuestNumber","HowManyQuestions","numberOfQuestionsChosen","setNumberOfQuestionsChosen","context","useContext","history","useHistory","m","Card","CardContent","CardActions","Grid","container","direction","alignContent","justifyContent","alignItems","Fab","size","color","aria-label","data-testid","onClick","Number","Button","push","cardReviewReport","boxReviewReport","ReviewReport","goLastReport","lastReport","JSON","parse","localStorage","getItem","fullWidth","disabled","showBtn","HomePage","StartQuestPage","lazy","StartQuestRoute","rest","valid","fallback","to","QuestionsPage","QuestsRoute","ReportPage","ReportRoute","answers","questions","Routes","exact","path","App","spacing","style","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b684377.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { createContext } from 'react';\n\nexport const DataContext = createContext({\n  numberQuestions: 0,\n  started: false,\n  questionsData: [],\n});\n\nexport const DataProvider = (props) => {\n  const [numberQuestions, setNumberQuestions] = useState(0);\n  const [started, setStarted] = useState(false);\n  const [questionsData, setQuestionsData] = useState([]);\n\n  return (\n    <DataContext.Provider\n      value={{\n        numberQuestions,\n        setNumberQuestions,\n        started,\n        setStarted,\n        questionsData,\n        setQuestionsData,\n      }}\n    >\n      {props.children}\n    </DataContext.Provider>\n  );\n};\n","import { Box, Paper, Typography, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  paperTitleApp: {\n    backgroundColor: '#ededed !important',\n  },\n  boxTitleApp: {\n    marginTop: '0.5rem !important',\n    '@media(min-width: 900px)': {\n      width: '60vw !important',\n    },\n  },\n});\n\nconst HomeTitle = () => {\n  const classes = useStyles();\n\n  return (\n    <header>\n      <Box width=\"90vw\" className={`${classes.boxTitleApp} box-title-app`}>\n        <Paper variant=\"outlined\" className={classes.paperTitleApp}>\n          <Typography align=\"center\" variant=\"h4\" component=\"h1\">\n            Desafio Front End\n          </Typography>\n        </Paper>\n      </Box>\n    </header>\n  );\n};\n\nexport default HomeTitle;\n","import {\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Fab,\n  Button,\n  makeStyles,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { useState, useContext } from 'react';\nimport { DataContext } from '../providers/data-context';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  cardQuestNumber: {\n    backgroundColor: '#ededed !important',\n  },\n  btnStartQuestion: {\n    marginTop: '1rem !important',\n  },\n  boxQuestNumber: {\n    '@media(min-width: 900px)': {\n      width: '60vw !important',\n    },\n  },\n});\n\nconst HowManyQuestions = () => {\n  const classes = useStyles();\n  const [numberOfQuestionsChosen, setNumberOfQuestionsChosen] = useState(5);\n\n  const context = useContext(DataContext);\n  const history = useHistory();\n\n  const saveInContext = () => {\n    context.setNumberQuestions(numberOfQuestionsChosen);\n  };\n\n  const selectedNumber = () => {\n    saveInContext();\n    history.push('/start');\n  };\n\n  const addNumberOfQuestion = () => {\n    if (numberOfQuestionsChosen >= 10) {\n      return setNumberOfQuestionsChosen(10);\n    }\n    setNumberOfQuestionsChosen(Number(numberOfQuestionsChosen) + 1);\n  };\n\n  const removeNumberOfQuestion = () => {\n    if (numberOfQuestionsChosen <= 1) {\n      return setNumberOfQuestionsChosen(1);\n    }\n    setNumberOfQuestionsChosen(Number(numberOfQuestionsChosen) - 1);\n  };\n\n  return (\n    <Box m=\"1rem\" width=\"90vw\" className={classes.boxQuestNumber}>\n      <Card className={classes.cardQuestNumber} variant=\"outlined\">\n        <CardContent>\n          <Typography align=\"center\" variant=\"h5\" component=\"h2\">\n            Quantas perguntas deseja responder?\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Grid\n            container\n            direction=\"column\"\n            alignContent=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Grid\n              container\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent=\"space-around\"\n            >\n              <Fab\n                variant=\"extended\"\n                size=\"small\"\n                color=\"primary\"\n                aria-label=\"add\"\n                data-testid=\"remove-number-question\"\n                onClick={removeNumberOfQuestion}\n              >\n                <RemoveIcon />\n              </Fab>\n              <Typography\n                variant=\"h2\"\n                component=\"h3\"\n                data-testid=\"number-question\"\n              >\n                {numberOfQuestionsChosen}\n              </Typography>\n              <Fab\n                variant=\"extended\"\n                size=\"small\"\n                color=\"primary\"\n                aria-label=\"add\"\n                data-testid=\"add-number-question\"\n                onClick={addNumberOfQuestion}\n              >\n                <AddIcon />\n              </Fab>\n            </Grid>\n            <Button\n              data-testid=\"btn-start-question\"\n              className={classes.btnStartQuestion}\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={selectedNumber}\n            >\n              escolher quantidade\n            </Button>\n          </Grid>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n\nexport default HowManyQuestions;\n","import {\n  Box,\n  Card,\n  CardActions,\n  Button,\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router';\n\nconst useStyles = makeStyles({\n  cardReviewReport: { backgroundColor: '#ededed !important' },\n  boxReviewReport: {\n    '@media(min-width: 900px)': {\n      width: '60vw !important',\n    },\n  },\n});\n\nconst ReviewReport = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const goLastReport = () => {\n    history.push('/report');\n  };\n\n  const showBtn = () => {\n    const lastReport = JSON.parse(localStorage.getItem('last-answers'));\n\n    if (lastReport === {} || lastReport === null) {\n      return (\n        <Grid container justifyContent=\"center\">\n          <Box width=\"90vw\" className={classes.boxReviewReport}>\n            <Card variant=\"outlined\" className={classes.cardReviewReport}>\n              <CardActions>\n                <Button\n                  fullWidth\n                  data-testid=\"btn-review-report\"\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={goLastReport}\n                  disabled\n                >\n                  Rever último relatório\n                </Button>\n              </CardActions>\n            </Card>\n          </Box>\n        </Grid>\n      );\n    } else {\n      return (\n        <Grid container justifyContent=\"center\">\n          <Box width=\"90vw\" className={classes.boxReviewReport}>\n            <Card variant=\"outlined\" className={classes.cardReviewReport}>\n              <CardActions>\n                <Button\n                  fullWidth\n                  data-testid=\"btn-review-report\"\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={goLastReport}\n                >\n                  Rever último relatório\n                </Button>\n              </CardActions>\n            </Card>\n          </Box>\n        </Grid>\n      );\n    }\n  };\n\n  return showBtn();\n};\n\nexport default ReviewReport;\n","import HowManyQuestions from '../components/how-many-questions';\nimport ReviewReport from '../components/review-report';\n\nconst HomePage = () => {\n  return (\n    <main>\n      <HowManyQuestions />\n      <ReviewReport />\n    </main>\n  );\n};\n\nexport default HomePage;\n","import { lazy, Suspense, useContext } from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { DataContext } from '../providers/data-context';\n\n// import StartQuestPage from '../pages/start-quest-page';\nconst StartQuestPage = lazy(() => import('../pages/start-quest-page'));\n\nconst StartQuestRoute = ({ ...rest }) => {\n  const context = useContext(DataContext);\n  const valid = context.numberQuestions > 0;\n\n  return (\n    <Route {...rest}>\n      {valid ? (\n        <Suspense fallback={<p>Loading...</p>}>\n          <StartQuestPage />\n        </Suspense>\n      ) : (\n        <Redirect to='/' />\n      )}\n    </Route>\n  );\n};\n\nexport default StartQuestRoute;\n","import { lazy, Suspense } from 'react';\nimport { useContext } from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { DataContext } from '../providers/data-context';\n\n// import QuestionsPage from '../pages/questions-page';\nconst QuestionsPage = lazy(() => import('../pages/questions-page'));\n\nconst QuestsRoute = ({ ...rest }) => {\n  const context = useContext(DataContext);\n  const valid = context.started;\n\n  return (\n    <Route {...rest}>\n      {valid ? (\n        <Suspense fallback={<p>Loading...</p>}>\n          <QuestionsPage />\n        </Suspense>\n      ) : (\n        <Redirect to='/' />\n      )}\n    </Route>\n  );\n};\n\nexport default QuestsRoute;\n","import { lazy, Suspense } from 'react';\nimport { Redirect, Route } from 'react-router';\n\n// import ReportPage from '../pages/report-page';\nconst ReportPage = lazy(() => import('../pages/report-page'));\n\nconst ReportRoute = ({ ...rest }) => {\n  const answers = JSON.parse(localStorage.getItem('last-answers'));\n  const questions = JSON.parse(localStorage.getItem('last-questions'));\n  const valid = answers !== null && questions !== null;\n\n  return (\n    <Route {...rest}>\n      {valid ? (\n        <Suspense fallback={<p>Loading...</p>}>\n          <ReportPage />\n        </Suspense>\n      ) : (\n        <Redirect to='/' />\n      )}\n    </Route>\n  );\n};\n\nexport default ReportRoute;\n","import { Switch, Route, Redirect, HashRouter } from 'react-router-dom';\nimport { DataProvider } from './providers/data-context';\n\nimport HomePage from './pages/home-page';\n\nimport StartQuestRoute from './routes/start-quest-route';\nimport QuestsRoute from './routes/questions-route';\nimport ReportRoute from './routes/report-route';\n\nconst Routes = () => {\n  return (\n    <DataProvider>\n      <HashRouter>\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <StartQuestRoute exact path='/start' />\n          <QuestsRoute exact path='/quests' />\n          <ReportRoute exact path='/report' />\n\n          <Route path='*'>\n            <Redirect to='/' />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </DataProvider>\n  );\n};\nexport default Routes;\n","import { Grid } from '@material-ui/core';\nimport './App.css';\nimport HomeTitle from './components/home-title';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"space-evenly\"\n      style={{ minHeight: '100vh' }}\n    >\n      <HomeTitle />\n      <Routes />\n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}